<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="appLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAACFRJREFUeF7tmV1oU2cYx/VmN4MN20RbkY2Jg82BF2PCTB1jH361vRk4mAjuag62
        sYsxdAydtkmEsU+ZbNpqkjJBdMhEN8XWqrNW27VVq/Wr9aNO2ybWWGUwHDjfnff41KXpv22sffocl+cP
        P7BtQs55fv9z3jfHMVzxRUqf9kdCJf5Y8IAvGur2R4K3x8fCZrhM2PylmbhnfVaQX1l2J7+q7GZ+5br6
        vMqyVXk7f5hKY/V+/NEVef5YaOODCk8nmwqQjluIyrItOTtXT6IxezP+iuBMXySUQAIflGwuQC95e8qu
        Tdj9/as0bm/FFyl5yRcJ/oXkjQRagLvkVZXfmrC7zFslsLd9riu/Fy3Af9g7gaeWA2eztxFJG0m0AH2x
        ewIav2z85aumjPSGD6EF6IvdGOZVlj9LGuSSGw2vRMJGGi1Af5z9QJg0yCU3GqpBwkYaLUB/7HMC0iAX
        +5AHCRtptAD9sQ+LSINcRmP9t2gB+mP3AaRBLkgWB1oADGmQC5LFgRYAQxrkgmRxoAXAkAa5IFkcaAEw
        pEEuSBYHWgAMaZALksWBFgBDGuSCZHGgBcCQBrkgWRxoATCkQS5IFgdaAAxpkAuSxYEWAEMa5IJkcaAF
        wJAGuSBZHGgBMKRBLkgWB1oADGmQC5LFgRYAQxrkgmRxoAXAkAa5IFkcaAEwpEEuSBYHWgAMaZALksWB
        FgBDGuSCZHGgBcCQBrkgWRxoATCkQS5IFgdaAAxpkAuSxYEWAEMa5IJkcaAFwJAGuSBZHGgBMKRBLkgW
        B1oADGmQC5LFgRYAQxrkgmRxoAXAkAa5IFkcaAEwpEEuSBYHWgAMaZALksWBFgBDGuSCZHGgBcCQBrkg
        WRxoATCkQS5IFgdaAAxpkAuSxYEWAEMa5IJkcaAFwJAGuSBZHGgBMKRBLkgWB1oADGmQC5LFgRYAQxrk
        gmRxoAXAkAa5IFkcaAEwpEEuSBYHWgAMaZALksWBFgBDGuSCZHGgBcCQBrkgWRxoATCkQS5IFgdaAAxp
        kAuSxYEWAEMa5IJkcaAFwJAGuSBZHGgBMKRBLkgWB1oADGmQC5LFgRYAQxrkgmRxoAXAkAa5IFkcaAEw
        pEEuSBYHWgAMaZALksWBFgBDGuSCZHGgBcCQBrkgWRxoATCkQS5IFgdaAAxpkAuSxYEWAEMa5IJkcaAF
        wJAGuSBZHGgBMKRBLkgWB1oADGmQC5LFgRYAQxrkgmRxoAXAkAa5IFkcaAEwpEEuSBYHWgAMaZALksWB
        FgBDGuSCZHGgBcCQBrkgWRxoATCkQS5IFgdaAAxpkAuSxYEWAEMa5IJkcaAFwJAGuSBZHGgBMKRBLkgW
        B1oADGmQC5LFgRYAQxrkgmRxoAUAVJVrAbKZKdVRLUA2M+vQVi1ANrO8pUYLkM3Ud/6hBchW3m7cZbp7
        bmgBspFn9lWYlkSXSSR7tADZxpPVEfPLpVZz7cZNczme0AJkE/bK/5XkW85eaNcCZAt2zbe3/V75lvqj
        x7UA/0uqyt2HPPZ7/rITNabO2e2nirdc7kqY6prDD0cBpm1ebUL1e8z+i62mvbvb3b2mn5CSOXZ+dUea
        zd6DD0EBPq3dZTqSSXgiyvBoOdvmXv0H6hq8XYA1R2vhCSjDw175p9rOu/ItDcdOeLcAi6u3wpNQhkf8
        WtI0HT95T77Fs98CJsZWmX3NzeZK/Kqu9w+AnZ2d4fEzrWZfbX0f+fbnRPK6Nwswd8vaewf62+EGd8PS
        2NxiGp0GZ0LTd1+bpo/fHxXQ54vjzMrOzM4uVXoqdilI9Hj0SeCH2zfBg86UvYsXmf0znhsV0Od7nbqm
        Zvfu0JaIe7MAJTt/hgeeKVqAgaltOOLuB+wSsfv8aW8WYKUWgIUGZ2mw637vHqGkrsqbBVhSvc0cajgK
        TyITtAB9sbM8f+lynw31VeffL/y0xgMFiATvpBdg7vaIe5D2f6tOn7tgjp08436FcTeCmfDRe6bxtemj
        A/p8Yeys7Mzs7OwMe6WnEjvxu/E7sycNcvFHwn+nF8BS034OHngmxEs/MV3FM0cF9PlepzXRZaZu+saM
        j4b+JA1y8UdDZ1AB5mzfYBLXe+AJDIUWYGCuJJNm3o6oO2NfNHiCNMglNxaOpsvv5YP929y1Cp3IYGgB
        MGedK3/ejsi9+fqj4XWkQS6+SGlhqvR0Fuze5Nyy4vCEBkIL0Bd7Edk1373tp8w2JxKeRRoEY8xYfzR4
        MvXA0pm88Quz9OBOU+l8b73YPfTj4WwvgH3CZx/y2O/5pc5XvenObr//XEPHnOmPvStBODkVwdftjrT/
        QQ6PinfnQ1kcoM/3Os6t/x/fhvDLNH5vxB8Lh9DBDgctwOA4m7/PaOzeivON4Ft0wPeLFmAAnLusLxb6
        nMbtzfhjoUVOEZLwBDJEC9Af56q/6ouG36IxezuPla/I8UVDy3OjwTZ0MkOhBSCcK94fCZ1yLqql49Yt
        fZzG+3BlXMWKJ/yx4GxfLLhgfDS4cCgmrQ8urH9zdh2SNRAdhYHbXYUFX3UWFnSgvw/GU2Ur5jv7F0/h
        7PDfyI2FX/H9GMqnMWZXuooCW5AsRGdRQbKjODDbvq99zvP5zs+16HUD4X6gxlvJtACdhYHmeNHMyfQ2
        Ny1Tpz7ivH8tej2C3qbxUjIpQEfRjM1ds6Y9Sm/pl46iwDtdxYFb6L2p0Ms1XspgBXDX+6LAEnrpoInP
        LXhxqH0BvVTjpQxUgNT1PtMMtS+gl2m8FFQAtN5nmsH2BfQSjZeSXoCh1vtMEwf7AvqTxkvpLcD9rPeZ
        5sqcwIzUfQH9WuOl2AIMZ73PNKn7AvqVxkuJFxcsG+56n2l69wX0Y5ZmzJh/AWyo7JrwGSwNAAAAAElF
        TkSuQmCC
</value>
  </data>
  <data name="appLogo.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>