<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="image.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xWIFpUJC/gcyr8t+7v25qgAAAABJRU5ErkJggg==
</value>
  </data>
</root>